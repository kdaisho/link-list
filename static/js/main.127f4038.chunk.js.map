{"version":3,"sources":["components/List/list.module.css","app.module.css","components/List/index.js","components/List/List.js","components/Header/index.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js","components/Header/header.module.css"],"names":["module","exports","List","useState","encodeValue","setEncodeValue","decodeValue","setDecodeValue","encoded","setEncoded","decoded","setDecoded","decodedList","setDecodedList","copied","setCopied","handleChange","isEncode","target","value","className","form","onSubmit","event","preventDefault","window","btoa","each","textarea","placeholder","onChange","button","clear","onClick","type","text","onCopy","copy","atob","list","err","console","error","length","map","item","i","href","title","rel","Header","header","App","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.127f4038.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"list_button__1v1Sn\",\"clear\":\"list_clear__15XSy\",\"copy\":\"list_copy__GVgi2\",\"form\":\"list_form__1vydq\",\"each\":\"list_each__1AUYZ\",\"textarea\":\"list_textarea__3zRs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"app_content__ckDFI\"};","import List from './List'\nexport default List","import React, { useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { button, clear, copy, form, each, textarea } from './list.module.css'\n\nconst List = () => {\n  const [encodeValue, setEncodeValue] = useState('')\n  const [decodeValue, setDecodeValue] = useState('')\n  const [encoded, setEncoded] = useState('')\n  const [decoded, setDecoded] = useState('')\n  const [decodedList, setDecodedList] = useState([])\n  const [_, setCopied] = useState({ copied: false })\n\n  const encode = event => {\n    event.preventDefault()\n    const encoded = window.btoa(encodeValue)\n    setEncoded(encoded)\n  }\n\n  const decode = event => {\n    event.preventDefault()\n    try {\n      const decoded = window.atob(decodeValue)\n      setDecoded(decoded)\n      const list = [...decodedList, decoded]\n      setDecodedList(list)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const handleChange = ({ target }, isEncode) => {\n    isEncode ? setEncodeValue(target.value) : setDecodeValue(target.value)\n  }\n\n  return (\n    <main className='list'>\n      <form className={form} onSubmit={encode}>\n        <div className={each}>\n          <label>\n            Encode\n            <textarea\n              className={textarea}\n              placeholder='Encode'\n              value={encodeValue}\n              onChange={event => handleChange(event, true)}\n            />\n          </label>\n        </div>\n        <button\n          className={`${button} ${clear}`}\n          onClick={() => setEncodeValue('')}\n        >\n          Clear\n        </button>\n        <button className={button} type='submit'>\n          Encode\n        </button>\n      </form>\n\n      <div className={each}>\n        <textarea className={textarea} placeholder='Encoded' value={encoded} />\n        <br />\n        <CopyToClipboard\n          text={encoded}\n          onCopy={() => setCopied({ copied: true })}\n        >\n          <button className={`${button} ${copy}`}>Copy to clipboard</button>\n        </CopyToClipboard>\n      </div>\n\n      <form className={form} onSubmit={decode}>\n        <div className={each}>\n          <label>\n            Decode\n            <textarea\n              className={textarea}\n              placeholder='Decode'\n              value={decodeValue}\n              onChange={event => handleChange(event, false)}\n            />\n          </label>\n        </div>\n        <button\n          className={`${button} ${clear}`}\n          onClick={() => setDecodeValue('')}\n        >\n          Clear\n        </button>\n        <button className={button} type='submit'>\n          Decode\n        </button>\n      </form>\n\n      <div className={each}>\n        <textarea className={textarea} placeholder='Decoded' value={decoded} />\n      </div>\n\n      <div>\n        {!!decodedList.length &&\n          decodedList.map((item, i) => (\n            <div key={`${i}-${item}`} className={each}>\n              <a href={item} title={item} target='_blank' rel='noreferrer'>\n                {item}\n              </a>\n            </div>\n          ))}\n      </div>\n    </main>\n  )\n}\n\nexport default List\n","import Header from './Header'\nexport default Header\n","import React from 'react'\nimport { header, title } from './header.module.css'\n\nconst Header = () => {\n  return (\n    <header className={header}>\n      <h1 className={title}>Link List</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import List from './components/List'\nimport Header from './components/Header'\nimport { content } from './app.module.css'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main className={content}>\n        <List />\n      </main>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__HZ6Fg\",\"title\":\"header_title__3EkoF\"};"],"sourceRoot":""}